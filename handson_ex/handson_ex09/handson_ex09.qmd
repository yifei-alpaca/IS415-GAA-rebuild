---
title: "Handson Ex09 - GWR Method"
date: "07 March 2023"
date-modified: "`r Sys.Date()`"
format:
 html:
  toc: true
  toc-location: right
  number-depth: 3
execute: 
  message: false
  warning: false
editor: visual
---

# Getting started

```{r}
pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary,readr,dplyr, ggplot2,patchwork, glue)
```

# Geospatial Data Wrangling

## Importing geospatial data

```{r}
mpsz = st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
```

Update CRS information

```{r}
mpsz_svy21 <- st_transform(mpsz, 3414)
```

check the newly transformed data frame

```{r}
st_crs(mpsz_svy21)
```

st_box() of sf package.

-   It obtains ranges of space and time coordinates.

-   **stbox** returns a **data.frame**, with three columns representing x-, y- and time-coordinates, and two rows containing min and max values. **bbox** gives a matrix with coordinate min/max values, compatible to **bbox**

```{r}
st_bbox(mpsz_svy21) #view extent

```

## Importing aspatial data

```{r}
condo_resale = read_csv("data/aspatial/Condo_resale_2015.csv")
```

Lets use glimpse() to display the data structure

```{r}
glimpse(condo_resale)
```

Lets see the top few X and Y coordinates

```{r}
head(condo_resale$LONGITUDE) #see the data in XCOORD column
```

```{r}
head(condo_resale$LATITUDE) #see the data in YCOORD column
```

```{r}
summary(condo_resale)
```

Notice that Family_friendly, freehold and leasehold are in binary format, 1 means yes and 0 means no.

## Converting aspatial data frame into a sf object (point)

```{r}
condo_resale.sf <- st_as_sf(condo_resale,
                            coords = c("LONGITUDE", "LATITUDE"),
                            crs=4326) %>%
  st_transform(crs=3414)
```

```{r}
head(condo_resale.sf)
```

# Exploratory Data Analysis (EDA)

## 

EDA using statistical graphics

notice in the handson, the values of x axis is in scientific format. It is hard to interprest hence, by adding

    options(scipen = 999)

it would display the whole numerical value as shown below.

```{r}
options(scipen = 999)
ggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +
  geom_histogram(bins=20, color="black", fill="light green") +
   labs(title = "Distribution of Resale Prices",
         x = "Selling Prices",
         y = 'Frequency') 

```

Based on the chart above, we can infer that it reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.

Statistically, the skewed dsitribution can be normalised by using **log transformation**. The code chunk below is used to derive a new variable called *LOG_SELLING_PRICE* by using a log transformation on the variable *SELLING_PRICE*. It is performed using `mutate()` of **dplyr** package. By using log, it can help to standardize the data.

```{r}
condo_resale.sf <- condo_resale.sf %>%
  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))
```

```{r}
options(scipen = 999)
ggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")
```

## Multiple Histogram Plots distribution of variables

```{r}
AREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + 
  geom_histogram(bins=20, color="black", fill="light blue")

AGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + 
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, 
                               aes(x= `PROX_URA_GROWTH_AREA`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +
  geom_histogram(bins=20, color="black", fill="light blue")

PROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, 
                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +
  geom_histogram(bins=20, color="black", fill="light blue")


```

Due to my laptop system, I am unable to run ggarrange, hence i'm using alternative method called "patchwork" to help with the graph arrangement.

```{r}
AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE+ 
          PROX_URA_GROWTH_AREA+ PROX_HAWKER_MARKET+ PROX_KINDERGARTEN+ PROX_MRT+
          PROX_PARK+ PROX_PRIMARY_SCH+ PROX_TOP_PRIMARY_SCH+ plot_layout(ncol = 3)
```

## Drawing statistical point map

we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using **tmap** package.

```{r}
tmap_mode("view")

```

```{r}
tm_shape(mpsz_svy21)+
  tm_polygons() +
tm_shape(condo_resale.sf) +  
  tm_dots(col = "SELLING_PRICE",
          alpha = 0.6,
          style="quantile") + 
  tmap_options(check.and.fix = TRUE) +
  tm_view(set.zoom.limits = c(11,14))
 
```

```{r}
tmap_mode("plot")
```

# Hedonic Pricing Modelling in R

In this section, we will learn how to build hedonic pricing models for condominium resale unit using lm() of R base.

## Simple Linear Regression Method

```{r}
condo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)
```

lm() would return an object class "lm" or for multiple responses of class c("mlm","lm")

The functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results.

```{r}
summary(condo.slr)
```

The R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.

Since p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of *SELLING_PRICE*.

```{r}
anova(condo.slr)
```

The **Coefficients:** section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.

To visualise the best fit curve on a scatterplot, we can incorporate `lm()` as a method function in ggplot's geometry as shown in the code chunk below.

```{r}
ggplot(data=condo_resale.sf,  
       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +
  geom_point() +
  geom_smooth(method = lm)
```

Figure above reveals that there are a few statistical outliers with relatively high selling prices.

## Multiple Linear Regression Method

In this section, we will be visualizing the relationship of the independent variables.

Below code chunk is a correlation matrix that is commonly used

```{r}
corrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = "AOE",
         tl.pos = "td", tl.cex = 0.4, method = "number", type = "upper", number.cex=0.50)
```

There are four methods in corrplot (parameter order), named "AOE", "FPC", "hclust", "alphabet". In the code chunk above, AOE order is used. It orders the variables by using the *angular order of the eigenvectors* method suggested by Michael Friendly.

From the scatterplot matrix, it is clear that ***Freehold*** is highly correlated to ***LEASE_99YEAR***. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, ***LEASE_99YEAR*** is [**excluded**]{.underline} in the subsequent model building.

## Building a hedonic pricing model using multiple linear regression method

The code below is using lm()

```{r}
condo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + 
                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +
                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + 
                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + 
                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + 
                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, 
                data=condo_resale.sf)
summary(condo.mlr)
```

After we remove the ***LEASE_99YEAR*** we can see an improvement in the r-square from 45% to 65%. This shows that the multiple linear regression model built is able to explain about 65% of the resale prices.

## Preparing Publication Quality Table: olsrr method

We will revised the model by removing those variables which are not statistically significant.

```{r}
condo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + 
                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +
                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + 
                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + 
                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,
                 data=condo_resale.sf)
ols_regress(condo.mlr1)
```

R^2^ is the coefficient of determination that tells us that how much percentage variation independent variable can be explained by independent variable. Here, 80.7% variation in Y can be explained by X.

## Preparing Publication Quality Table: gtsummary method

```{r}
tbl_regression(condo.mlr1, intercept = TRUE)
```
